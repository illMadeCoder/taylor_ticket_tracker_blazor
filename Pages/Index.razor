@page "/"
@using taylor_ticket_tracker_blazor.Data
@using Microsoft.EntityFrameworkCore
@inject IServiceScopeFactory ScopeFactory

<PageTitle>Taylor Ticket Tracker</PageTitle>

<h3>Event Details</h3>

@code {
    private IList<Event> eventDetails;
    private System.Timers.Timer timer;

    protected override async Task OnInitializedAsync()
{
    eventDetails = await GetEventsAsync();
    timer = new System.Timers.Timer(1000); // set the interval to 1 second
    timer.Elapsed += async (sender, args) => await RefreshEvents();
    timer.Start();
}

    private async Task<IList<Event>> GetEventsAsync()
{
    using var scope = ScopeFactory.CreateScope();
    var dbContext = scope.ServiceProvider.GetRequiredService<ApplicationDbContext>();
    return await dbContext.Events
    .OrderByDescending(e => e.Id)
    .Take(10)
    .ToListAsync();
}

    private async Task RefreshEvents()
{
    eventDetails = await GetEventsAsync();
    InvokeAsync(StateHasChanged);
}

    public void Dispose()
{
    timer?.Stop();
    timer?.Dispose();
}
}

@if (eventDetails == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="card-container">
        @foreach (var eventItem in eventDetails)
        {
            <a href="@eventItem.Url" target="_blank">
		<div class="event-card" id="@("card-" + eventItem.Id)">
                    <div class="event-image">
                        <img src="@eventItem.Img" alt="Event Image">
                    </div>
                    <div class="event-details">
                        <h4>@eventItem.Section | $@string.Format("{0:0}", eventItem.Price) | @eventItem.InsertDateTime.ToString("MMMM dd")</h4>
                    </div>
                </div>
            </a>
			}
    </div>
}

    
